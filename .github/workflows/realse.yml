name: CLI Build on Main (GoReleaser)

on:
  push:
    branches:
      - main # Trigger this workflow on every push to the 'main' branch.
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0, v2.1.3, etc.
jobs:
  build:
    runs-on: ubuntu-latest # Use a Linux runner for building
    permissions:
      contents: write # Only read permission is needed as we are not creating a release.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to check out your repository code.
        with:
          fetch-depth: 0 # Fetch all history for all tags

      - name: Set up Go
        uses: actions/setup-go@v5 # Action to set up the Go environment.
        with:
          go-version: '1.25.1' # Using a stable Go version.

      # The 'Create dist directory' and 'Get build info for ldflags' steps are no longer needed,
      # as goreleaser handles these internally.

      - name: Run GoReleaser (Snapshot Build)
        uses: goreleaser/goreleaser-action@v5 # Action to run GoReleaser.
        with:
          distribution: goreleaser # Use the goreleaser binary.
          version: latest # Use the latest version of goreleaser.
          args: release  --clean # Build a snapshot (dev build) and clean up.
          workdir: ./cli_app # <--- IMPORTANT: Run goreleaser from the cli_app directory.
        env:
          # Pass the API Key from GitHub Secrets as an environment variable to goreleaser.
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          